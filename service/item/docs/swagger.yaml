basePath: /
definitions:
  item.CreateDto:
    properties:
      code:
        type: string
      company:
        type: string
      name:
        type: string
      point:
        type: integer
      product:
        type: string
    required:
    - name
    - point
    type: object
  item.Entity:
    properties:
      code:
        type: string
      company:
        type: string
      group:
        type: string
      id:
        type: string
      name:
        type: string
      point:
        type: integer
      product:
        type: string
    required:
    - code
    - company
    - name
    - point
    - product
    type: object
  item.UpdateDto:
    properties:
      name:
        type: string
      point:
        type: integer
    required:
    - name
    - point
    type: object
  util.ErrorResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the item API of LoyaltyDLT project
  title: Item API
  version: "0.1"
paths:
  /items:
    get:
      description: Read all items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/item.Entity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Read all items
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create an item data
      parameters:
      - description: Create an item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.CreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/item.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Create an item data
      tags:
      - item
  /items/{id}:
    delete:
      description: Delete an item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Delete an item
      tags:
      - item
    get:
      description: Read an item data
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Read an item data
      tags:
      - item
    patch:
      consumes:
      - application/json
      description: Update an item
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Update all items
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/item.UpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/item.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Update an item
      tags:
      - item
swagger: "2.0"
