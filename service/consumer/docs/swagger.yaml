basePath: /
definitions:
  consumer.CreateDto:
    properties:
      email:
        type: string
      lastname:
        type: string
      name:
        type: string
    required:
    - email
    - lastname
    - name
    type: object
  consumer.Entity:
    properties:
      email:
        type: string
      id:
        type: string
      lastname:
        type: string
      name:
        type: string
      wallet:
        additionalProperties:
          type: integer
        type: object
    required:
    - email
    - lastname
    - name
    type: object
  consumer.ItemDto:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  util.ErrorResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the consumer API of LoyaltyDLT project
  title: Consumer API
  version: "1.0"
paths:
  /consumers:
    get:
      description: Get all consumer data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/consumer.Entity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Read all consumer data
      tags:
      - consumer
    post:
      consumes:
      - application/json
      description: Create a consumer data
      parameters:
      - description: Create consumer
        in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/consumer.CreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/consumer.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Create a consumer data
      tags:
      - consumer
  /consumers/{id}:
    delete:
      description: Delete a consumer data
      parameters:
      - description: Consumer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Delete a consumer data
      tags:
      - consumer
    get:
      description: Get a consumer data
      parameters:
      - description: Consumer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/consumer.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Read a consumer data
      tags:
      - consumer
    patch:
      consumes:
      - application/json
      description: Update a consumer data
      parameters:
      - description: Update a consumer
        in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/consumer.Entity'
      - description: Consumer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/consumer.Entity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Update a consumer data
      tags:
      - consumer
  /consumers/{id}/add:
    put:
      consumes:
      - application/json
      description: Update a consumer data by adding an item to consumer's wallet
      parameters:
      - description: Update a consumer wallet
        in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/consumer.ItemDto'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Add an item to consumer's wallet
      tags:
      - consumer
  /consumers/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Update a consumer data by remove an item from consumer's wallet
      parameters:
      - description: Remove from the consumer wallet
        in: body
        name: consumer
        required: true
        schema:
          $ref: '#/definitions/consumer.ItemDto'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.ErrorResponse'
      summary: Remove an item from consumer's wallet
      tags:
      - consumer
swagger: "2.0"
