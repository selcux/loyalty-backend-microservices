{
    "swagger": "2.0",
    "info": {
        "description": "This is the consumer API of LoyaltyDLT project",
        "title": "Consumer API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/consumers": {
            "get": {
                "description": "Get all consumer data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Read all consumer data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/consumer.Entity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a consumer data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Create a consumer data",
                "parameters": [
                    {
                        "description": "Create consumer",
                        "name": "consumer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/consumer.CreateDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/consumer.Entity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/consumers/{id}": {
            "get": {
                "description": "Get a consumer data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Read a consumer data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consumer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/consumer.Entity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a consumer data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Delete a consumer data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consumer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a consumer data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Update a consumer data",
                "parameters": [
                    {
                        "description": "Update a consumer",
                        "name": "consumer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/consumer.Entity"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Consumer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/consumer.Entity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/consumers/{id}/add": {
            "put": {
                "description": "Update a consumer data by adding an item to consumer's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Add an item to consumer's wallet",
                "parameters": [
                    {
                        "description": "Update a consumer wallet",
                        "name": "consumer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/consumer.ItemDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/consumers/{id}/delete": {
            "delete": {
                "description": "Update a consumer data by remove an item from consumer's wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consumer"
                ],
                "summary": "Remove an item from consumer's wallet",
                "parameters": [
                    {
                        "description": "Remove from the consumer wallet",
                        "name": "consumer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/consumer.ItemDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "consumer.CreateDto": {
            "type": "object",
            "required": [
                "email",
                "lastname",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "consumer.Entity": {
            "type": "object",
            "required": [
                "email",
                "lastname",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "wallet": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "consumer.ItemDto": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}