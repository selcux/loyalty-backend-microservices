--- #---------------- Orderer2 1Deployment ---------------
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: orderer2
  name: orderer2
  namespace: hyperledger
spec:
  selector:
    matchLabels:
      app: orderer2
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: orderer2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                        - orderer0
                        - orderer1
                topologyKey: "kubernetes.io/hostname"
      containers:
        - args:
            - orderer
          env:
            - name: FABRIC_LOGGING_SPEC
              value: DEBUG
            - name: ORDERER_OPERATIONS_LISTENADDRESS
              value: 0.0.0.0:8443
            - name: ORDERER_METRICS_PROVIDER
              value: prometheus
            - name: ORDERER_GENERAL_GENESISFILE
              value: /channel-artifacts/genesis.block
#              value: /var/hyperledger/orderer/genesis.block
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: file
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: 0.0.0.0
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: /var/hyperledger/orderer/msp
            - name: ORDERER_GENERAL_LOCALMSPID
              value: OrdererMSP
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: /var/hyperledger/orderer/tls/server.crt
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: /var/hyperledger/orderer/tls/server.key
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: "[/var/hyperledger/orderer/tls/ca.crt]"
          image: hyperledger/fabric-orderer:2.3
          name: orderer
          ports:
            - containerPort: 7050
            - containerPort: 8443
          volumeMounts:
            - mountPath: /var/hyperledger/production
              name: orderer2-persistentdata
              subPath: orderer2
            - mountPath: /channel-artifacts
              name: orderer2-claim0
            - mountPath: /var/hyperledger/orderer/msp
              name: orderer2-claim1
              subPath: msp
            - mountPath: /var/hyperledger/orderer/tls
              name: orderer2-claim1
              subPath: tls
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
      restartPolicy: Always
      volumes:
        - name: orderer2-persistentdata
          azureFile:
            secretName: azure-loyaltydltsa-secret
            shareName: loyalty-volumes
            readOnly: false
        - name: orderer2-claim0
          azureFile:
            secretName: azure-loyaltydltsa-secret
#            shareName: channel-artifacts/genesis.block
            shareName: channel-artifacts
            readOnly: false
        - name: orderer2-claim1
          azureFile:
            secretName: azure-loyaltydltsa-secret
            shareName: orderer2-config
            readOnly: false
#        - name: orderer2-claim2
#          azureFile:
#            secretName: azure-loyaltydltsa-secret
#            shareName: orderer2-config
#            readOnly: false
